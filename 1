use master;
create database atv0201;
go 
use atv0201;
 
create table tb_estado(
    sigla char(2) not null,
    nome_estado varchar(40) not null,
    primary key (sigla)
);
go
 
create table tb_classe(
    id_classe smallint not null,
    id_andar smallint not null,
    primary key(id_classe)
);
go
 
create table tb_professor(
    id_professor char(3) not null,
    nome_professor varchar(25) not null,
    primary key (id_professor)
);
go
 
create table tb_aluno(
    cod_aluno smallint not null,
    nome_aluno varchar(45) not null,
    end_aluno varchar(100) not null,
    sigla char(2) not null,
    id_classe smallint not null,
    primary key(cod_aluno),
    foreign key(sigla) references tb_estado(sigla),
    foreign key(id_classe) references tb_classe(id_classe)
);
go
 
create table tb_disciplina(
    id_disciplina char(3) not null,
    nome_disciplina varchar(15) not null,
    id_professor_disciplina char(3) not null,
    nota_minima_disciplina smallint not null,
    primary key (id_disciplina),
    foreign key (id_professor_disciplina) references tb_professor(id_professor)
);
go
 
create table aluno_disciplina(
    cod_aluno smallint not null,
    id_disciplina char(3) not null,
    nota_aluno smallint not null,
    primary key (cod_aluno, id_disciplina),
    foreign key (id_disciplina) references tb_disciplina(id_disciplina),
    foreign key (cod_aluno) references tb_aluno(cod_aluno)
);
go
 
-- inserindo professores
insert into tb_professor(id_professor, nome_professor) values('joi', 'joilson cardoso');
insert into tb_professor(id_professor, nome_professor) values('ose', 'oseas santana');
insert into tb_professor(id_professor, nome_professor) values('vit', 'vitor vasconcelos');
insert into tb_professor(id_professor, nome_professor) values('fer', 'jose roberto ferroli');
insert into tb_professor(id_professor, nome_professor) values('lim', 'valmir lima');
insert into tb_professor(id_professor, nome_professor) values('eds', 'edson silva');
insert into tb_professor(id_professor, nome_professor) values('wag', 'wagner okida');
 
-- inserindo disciplinas
insert into tb_disciplina(id_disciplina, nome_disciplina, id_professor_disciplina, nota_minima_disciplina) values('mat', 'matematica', 'joi', 7);
insert into tb_disciplina(id_disciplina, nome_disciplina, id_professor_disciplina, nota_minima_disciplina) values('por', 'portugues', 'vit', 5);
insert into tb_disciplina(id_disciplina, nome_disciplina, id_professor_disciplina, nota_minima_disciplina) values('fis', 'fisica', 'ose', 3);
insert into tb_disciplina(id_disciplina, nome_disciplina, id_professor_disciplina, nota_minima_disciplina) values('his', 'historia', 'eds', 2);
insert into tb_disciplina(id_disciplina, nome_disciplina, id_professor_disciplina, nota_minima_disciplina) values('geo', 'geografia', 'wag', 4);
insert into tb_disciplina(id_disciplina, nome_disciplina, id_professor_disciplina, nota_minima_disciplina) values('ing', 'ingles', 'lim', 2);
 
-- inserindo estado
insert into tb_estado(sigla, nome_estado) values ('sp', 'são paulo');
 
-- inserindo classes
insert into tb_classe(id_classe, id_andar) values(1, 1);
insert into tb_classe(id_classe, id_andar) values(2, 2);
insert into tb_classe(id_classe, id_andar) values(3, 3);
 
-- inserindo alunos
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(1, 'antonio carlos penteado', 'rua x', 'sp', 1);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(2, 'auromir da silva valdevino', 'rua w', 'sp', 1);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(3, 'andre costa', 'rua t', 'sp', 1);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(4, 'roberto soares de menezes', 'rua bw', 'sp', 2);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(5, 'dania', 'rua ccc', 'sp', 2);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(6, 'carlos magalhaes', 'av sp', 'sp', 2);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(7, 'marcelo rauba', 'av sao luis', 'sp', 3);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(8, 'fernando', 'av country', 'sp', 3);
insert into tb_aluno(cod_aluno, nome_aluno, end_aluno, sigla, id_classe) values(9, 'walmir burin', 'rua ssisis', 'sp', 3);
 
 
--inserindo aluno disciplina
INSERT INTO aluno_disciplina VALUES
(1, 'MAT', 0),
(2, 'MAT', 0),
(3, 'MAT', 1),
(4, 'POR', 2),
(5, 'POR', 2),
(6, 'POR', 2),
(7, 'FIS', 3),
(8, 'FIS', 3),
(9, 'FIS', 3),
(1, 'POR', 2),
(2, 'POR', 2),
(7, 'POR', 2),
(1, 'FIS', 3)
 
--UTILIZANDO O MODELO DE DADOS DE CURSO:
 
--A-    Exercícios de SELECT básico                              
 
--1). Queremos selecionar todos os alunos cadastrados.
select*from tb_aluno
 
--2). Queremos selecionar todos os nomes de disciplina,cujo a nota mínima seja maior que 5 ( cinco ).
 
select*from tb_disciplina where nota_minima_disciplina>5
 
--3). Queremos selecionar todas disciplinas que tenham
--nota mínima entre 3 (três) e 5 (cinco).
 
select*from tb_disciplina where nota_minima_disciplina>=3 and nota_minima_disciplina<=5
 
 
--B-    Exercícios de SELECT (Ordenando e agrupando dados)
--1). Queremos selecionar todos os alunos em ordem alfabética de nome de aluno, e também o número da classe que estuda.
 
select*from tb_aluno order by nome_aluno
 
--2). Selecionaremos o item anterior, porém ordenado alfabeticamente pelo identificador do aluno de forma descendente  (ascendente é “default”).
 
select*from tb_aluno order by cod_aluno desc
 
--3). Selecionaremos  todos os alunos que cursam as disciplinas de matemática E de português agrupados por aluno e disciplina.
SELECT al.nome_aluno
FROM tb_aluno al
JOIN aluno_disciplina ad ON al.cod_aluno = ad.cod_aluno
JOIN tb_disciplina di ON ad.id_disciplina = di.id_disciplina
WHERE di.nome_disciplina IN ('portugues', 'matematica')
GROUP BY al.nome_aluno
HAVING COUNT(DISTINCT di.nome_disciplina) = 2;
 
--C-    Exercícios de SELECT (Junção de Tabelas)
 --1). Queremos selecionar todos os nomes de alunos que cursam Português ou Matemática.
 select distinct a.nome_aluno 
 from tb_aluno a 
 join aluno_disciplina ad on a.cod_aluno = ad.cod_aluno 
 join tb_disciplina d on ad.id_disciplina = d.id_disciplina
 where d.nome_disciplina in ('portugues','matematica');

 --daqui para baixo foi preciso de ajuda 

--2). Queremos selecionar todos os nomes de alunos cadastrados que cursam  a disciplina FÍSICA e seus respectivos endereços .
 select distinct a.nome_aluno
 from tb_aluno a
 join aluno_disciplina ad on a.cod_aluno=ad.cod_aluno
 join tb_disciplina d on ad.id_disciplina = d.id_disciplina
 where d.nome_disciplina in ('fisica');

--3). Queremos selecionar todos os nomes de alunos cadastrados que cursam física e o andar que se encontra a classe dos mesmos.
--Preste atenção ao detalhe da concatenação de uma string "andar" junto à coluna do número do andar (Apenas para estética do resultado).
select a.nome_aluno, concat('andar ', c.id_andar) as andar_classe
from tb_aluno a
join aluno_disciplina ad on a.cod_aluno = ad.cod_aluno
join tb_disciplina d on ad.id_disciplina = d.id_disciplina
join tb_classe c on a.id_classe = c.id_classe
where d.nome_disciplina = 'fisica';
 
--D-    Exercícios de SELECT (OUTER JOIN)
 
--1.    Selecionar todos os Professores com suas respectivas disciplinas e os demais Professores que não lecionam disciplina alguma.
 select p.nome_professor, d.nome_disciplina
from tb_professor p
left join tb_disciplina d on p.id_professor = d.id_professor_disciplina;
 
--E-    Exercícios de SELECT (USE Clausula IN e/ou SUBSelect).Não pode usar junção.
 
  
--1.    Selecionar todos os nomes de professores que tenham ministrado disciplina para alunos que sejam do Estado do Piaui,
--cujo a classe tenha sido no terceiro andar.
select nome_professor
from tb_professor
where id_professor in (
    select id_professor_disciplina
    from tb_disciplina
    where id_disciplina in (
        select id_disciplina
        from aluno_disciplina
        where cod_aluno in (
            select cod_aluno
            from tb_aluno
            where sigla = 'PI'
            and id_classe in (
                select id_classe
                from tb_classe
                where id_andar = 3
            )
        )
    )
);
